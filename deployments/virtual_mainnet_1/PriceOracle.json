{"metadata":"{\"defaultCompiler\":{\"version\":\"0.8.18\"},\"sources\":{\"contracts/PriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceOracle is Ownable {\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n    string public priceFeedDescription; // Public variable for currency pair\\r\\n\\r\\n    constructor(address _priceFeed) {\\r\\n        _updatePriceFeed(_priceFeed);\\r\\n    }\\r\\n\\r\\n    function setPriceFeed(address _newPriceFeed) external onlyOwner {\\r\\n        require(_newPriceFeed != address(0), \\\"Invalid address\\\");\\r\\n        _updatePriceFeed(_newPriceFeed);\\r\\n    }\\r\\n\\r\\n    function _updatePriceFeed(address _priceFeed) internal {\\r\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\r\\n        priceFeedDescription = priceFeed.description(); // Fetch and store description\\r\\n    }\\r\\n\\r\\n    function getLatestPrice() public view returns (int) {\\r\\n        (, int price, , , ) = priceFeed.latestRoundData();\\r\\n        return price;\\r\\n    }\\r\\n\\r\\n     // Getter function to return the address of the priceFeed contract\\r\\n    function getPriceFeed() external view returns (address) {\\r\\n        return address(priceFeed);  // Convert contract to address\\r\\n    }\\r\\n}\\r\\n\",\"versionPragma\":\"^0.8.18\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.0\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.0\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"versionPragma\":\"^0.8.0\"}}}","address":"0xc36044ACa0257C0e5c14D11715F191fBd1329574","bytecode":"0x60806040523480156200001157600080fd5b5060405162000b7038038062000b70833981016040819052620000349162000138565b6200003f3362000051565b6200004a81620000a1565b50620003b0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180546001600160a01b0319166001600160a01b03831690811790915560408051633942720b60e11b81529051637284e416916004808201926000929091908290030181865afa158015620000fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000125919081019062000180565b600290620001349082620002e4565b5050565b6000602082840312156200014b57600080fd5b81516001600160a01b03811681146200016357600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200019457600080fd5b82516001600160401b0380821115620001ac57600080fd5b818501915085601f830112620001c157600080fd5b815181811115620001d657620001d66200016a565b604051601f8201601f19908116603f011681019083821181831017156200020157620002016200016a565b8160405282815288868487010111156200021a57600080fd5b600093505b828410156200023e57848401860151818501870152928501926200021f565b600086848301015280965050505050505092915050565b600181811c908216806200026a57607f821691505b6020821081036200028b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002df57600081815260208120601f850160051c81016020861015620002ba5750805b601f850160051c820191505b81811015620002db57828155600101620002c6565b5050505b505050565b81516001600160401b038111156200030057620003006200016a565b620003188162000311845462000255565b8462000291565b602080601f831160018114620003505760008415620003375750858301515b600019600386901b1c1916600185901b178555620002db565b600085815260208120601f198616915b82811015620003815788860151825594840194600190910190840162000360565b5085821015620003a05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6107b080620003c06000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f35780638e15f473146101045780639e87a5cd1461011a578063f2fde38b1461012b57600080fd5b80631b59cd9e1461008d578063715018a6146100ab578063724e78da146100b5578063741bef1a146100c8575b600080fd5b61009561013e565b6040516100a2919061049c565b60405180910390f35b6100b36101cc565b005b6100b36100c33660046104cf565b6101e0565b6001546100db906001600160a01b031681565b6040516001600160a01b0390911681526020016100a2565b6000546001600160a01b03166100db565b61010c610241565b6040519081526020016100a2565b6001546001600160a01b03166100db565b6100b36101393660046104cf565b6102c6565b6002805461014b906104ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610177906104ff565b80156101c45780601f10610199576101008083540402835291602001916101c4565b820191906000526020600020905b8154815290600101906020018083116101a757829003601f168201915b505050505081565b6101d461033c565b6101de6000610396565b565b6101e861033c565b6001600160a01b0381166102355760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b61023e816103e6565b50565b600080600160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bb9190610558565b509195945050505050565b6102ce61033c565b6001600160a01b0381166103335760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161022c565b61023e81610396565b6000546001600160a01b031633146101de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180546001600160a01b0319166001600160a01b03831690811790915560408051633942720b60e11b81529051637284e416916004808201926000929091908290030181865afa15801561043f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046791908101906105be565b60029061047490826106ba565b5050565b60005b8381101561049357818101518382015260200161047b565b50506000910152565b60208152600082518060208401526104bb816040850160208701610478565b601f01601f19169190910160400192915050565b6000602082840312156104e157600080fd5b81356001600160a01b03811681146104f857600080fd5b9392505050565b600181811c9082168061051357607f821691505b60208210810361053357634e487b7160e01b600052602260045260246000fd5b50919050565b805169ffffffffffffffffffff8116811461055357600080fd5b919050565b600080600080600060a0868803121561057057600080fd5b61057986610539565b945060208601519350604086015192506060860151915061059c60808701610539565b90509295509295909350565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156105d057600080fd5b815167ffffffffffffffff808211156105e857600080fd5b818401915084601f8301126105fc57600080fd5b81518181111561060e5761060e6105a8565b604051601f8201601f19908116603f01168101908382118183101715610636576106366105a8565b8160405282815287602084870101111561064f57600080fd5b610660836020830160208801610478565b979650505050505050565b601f8211156106b557600081815260208120601f850160051c810160208610156106925750805b601f850160051c820191505b818110156106b15782815560010161069e565b5050505b505050565b815167ffffffffffffffff8111156106d4576106d46105a8565b6106e8816106e284546104ff565b8461066b565b602080601f83116001811461071d57600084156107055750858301515b600019600386901b1c1916600185901b1785556106b1565b600085815260208120601f198616915b8281101561074c5788860151825594840194600190910190840161072d565b508582101561076a5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212202aec49c53d6aaf7a4095739432e706e62f123f70797dc00e95209c28503d012a64736f6c63430008120033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f35780638e15f473146101045780639e87a5cd1461011a578063f2fde38b1461012b57600080fd5b80631b59cd9e1461008d578063715018a6146100ab578063724e78da146100b5578063741bef1a146100c8575b600080fd5b61009561013e565b6040516100a2919061049c565b60405180910390f35b6100b36101cc565b005b6100b36100c33660046104cf565b6101e0565b6001546100db906001600160a01b031681565b6040516001600160a01b0390911681526020016100a2565b6000546001600160a01b03166100db565b61010c610241565b6040519081526020016100a2565b6001546001600160a01b03166100db565b6100b36101393660046104cf565b6102c6565b6002805461014b906104ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610177906104ff565b80156101c45780601f10610199576101008083540402835291602001916101c4565b820191906000526020600020905b8154815290600101906020018083116101a757829003601f168201915b505050505081565b6101d461033c565b6101de6000610396565b565b6101e861033c565b6001600160a01b0381166102355760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b61023e816103e6565b50565b600080600160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bb9190610558565b509195945050505050565b6102ce61033c565b6001600160a01b0381166103335760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161022c565b61023e81610396565b6000546001600160a01b031633146101de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180546001600160a01b0319166001600160a01b03831690811790915560408051633942720b60e11b81529051637284e416916004808201926000929091908290030181865afa15801561043f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046791908101906105be565b60029061047490826106ba565b5050565b60005b8381101561049357818101518382015260200161047b565b50506000910152565b60208152600082518060208401526104bb816040850160208701610478565b601f01601f19169190910160400192915050565b6000602082840312156104e157600080fd5b81356001600160a01b03811681146104f857600080fd5b9392505050565b600181811c9082168061051357607f821691505b60208210810361053357634e487b7160e01b600052602260045260246000fd5b50919050565b805169ffffffffffffffffffff8116811461055357600080fd5b919050565b600080600080600060a0868803121561057057600080fd5b61057986610539565b945060208601519350604086015192506060860151915061059c60808701610539565b90509295509295909350565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156105d057600080fd5b815167ffffffffffffffff808211156105e857600080fd5b818401915084601f8301126105fc57600080fd5b81518181111561060e5761060e6105a8565b604051601f8201601f19908116603f01168101908382118183101715610636576106366105a8565b8160405282815287602084870101111561064f57600080fd5b610660836020830160208801610478565b979650505050505050565b601f8211156106b557600081815260208120601f850160051c810160208610156106925750805b601f850160051c820191505b818110156106b15782815560010161069e565b5050505b505050565b815167ffffffffffffffff8111156106d4576106d46105a8565b6106e8816106e284546104ff565b8461066b565b602080601f83116001811461071d57600084156107055750858301515b600019600386901b1c1916600185901b1785556106b1565b600085815260208120601f198616915b8281101561074c5788860151825594840194600190910190840161072d565b508582101561076a5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212202aec49c53d6aaf7a4095739432e706e62f123f70797dc00e95209c28503d012a64736f6c63430008120033","abi":[{"inputs":[{"internalType":"address","name":"_priceFeed","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"getLatestPrice","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceFeed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeedDescription","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newPriceFeed","type":"address"}],"name":"setPriceFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}]}